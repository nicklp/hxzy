<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 这个xml的里面所有的操作，都是要对这个 Mapper 接口进行定义 -->
<mapper namespace="com.wisezone.mapper.UserInfoMapper">
 

	<resultMap id="BaseResultMap" type="com.wisezone.entity.UserInfo">
		<id column="t_id" jdbcType="INTEGER" property="tId" />
		<result column="login_name" jdbcType="VARCHAR" property="loginName" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="login_pwd" jdbcType="VARCHAR" property="loginPwd" />
		<result column="create_time" jdbcType="DATE" property="createTime" />
		<result column="last_login_time" jdbcType="DATE" property="lastLoginTime" />
		<result column="state" jdbcType="INTEGER" property="state" />
		<result column="role" jdbcType="INTEGER" property="role" />
	</resultMap>
	 
     <!-- 新增 
     useGeneratedKeys='true'	获取插入数据时产生的主键，并将值保存到keyProperty属性定义的属性中
     keyProperty 是java对象的属性名
     -->
     <insert id="insert" parameterType="com.wisezone.entity.UserInfo" useGeneratedKeys="true" keyProperty="tId">
		insert into user_info (t_id,user_name, login_name, login_pwd,create_time, last_login_time, state,role)
		values (
			#{tId,jdbcType=INTEGER}, 
			#{userName,jdbcType=VARCHAR},
			#{loginName,jdbcType=VARCHAR},
			#{loginPwd,jdbcType=VARCHAR},
			#{createTime,jdbcType=DATE},
			#{lastLoginTime,jdbcType=DATE},
			#{state,jdbcType=INTEGER}, 
			#{role,jdbcType=INTEGER}
		)
  </insert>

	<select id="login" parameterType="map" resultMap="BaseResultMap">
		select 
			t_id,login_name,user_name,create_time,last_login_time,state,role
		from user_info 
		where login_name = #{loginName} and login_pwd = #{loginPwd}
		and state not in (2,3)
	</select>

    <!--更新-->
    <!--  -->
    <update id="update" parameterType="com.wisezone.entity.UserInfo">
	    update user_info
	    <trim prefix="set" suffixOverrides=",">
		  <if test="loginName!=null">login_name = #{loginName,jdbcType=VARCHAR},</if>
		  <if test="userName!=null">user_name = #{userName,jdbcType=VARCHAR},</if>
		  <if test="loginPwd!=null">login_pwd = #{loginPwd,jdbcType=VARCHAR},</if>
		  <if test="state!=0">state = #{state,jdbcType=INTEGER},</if>
		  <if test="role!=0">role = #{role,jdbcType=INTEGER}</if>
		 </trim>
	    where t_id = #{tId,jdbcType=INTEGER}
  </update>
  
  <!--登陆-->
  <resultMap type="com.wisezone.entity.UserInfo" id="doLogin">
  	<id column="t_id" jdbcType="INTEGER" property="tId" />
	<result column="login_name" jdbcType="VARCHAR" property="loginName" />
	<result column="user_name" jdbcType="VARCHAR" property="userName" />
	<result column="last_login_time" jdbcType="DATE" property="lastLoginTime" />
	<result column="state" jdbcType="INTEGER" property="state" />
	<result column="role" jdbcType="INTEGER" property="role" />
  </resultMap>
  <select id="userLogin" parameterType="com.wisezone.entity.UserInfo" resultMap="doLogin">
  	select * from user_info
  </select>
  <select id="getUserInfo" resultMap="doLogin" parameterType="Integer">
  	select * from user_info t where t.state = 1 
  	<![CDATA[
  		and t.role = #{role}
  	]]>
  </select>	
	 
  <!--分页查询-->
   <select id="searchPaging"  resultMap="BaseResultMap">
      select *
      from user_info 
	      <where>          
     		 <if test="param != null">
	          <!-- 遍历map集合  index相当于是键,  item相当于是值 -->
	           <foreach collection="param" index="key" item="value" open="(" separator="and"  close=")">
	                  ${key} = #{value} 
	           </foreach>      
      		</if>
      		and role != 9
	      </where> 
      <!-- 分页 -->
      limit #{offset}, #{limit}
 </select>
      
      <!-- 分页查询 -->
   <select id="searchPagingCount"  resultType="int">
      select count(*)
      from user_info 
	      <where>          
		      <if test="param != null">
	          <!-- 遍历map集合  index相当于是键,  item相当于是值 -->
	           <foreach collection="param" index="key" item="value" open="(" separator="and"  close=")">
	                  ${key} = #{value}    
	           </foreach>      
		      </if>
		      and role != 9
	      </where> 
     
 </select>  
  
  <select id="yj_sort" parameterType="String" resultType="map">
  		select 
		t.user_name userName,
		(
			select count(t1.visit_date) 
			from user_cv_rel t1
			where date_format(t1.visit_date,'%Y-%m') = 
			<choose>
				<when test="dateMonth != null and dateMonth != ''">
					#{dateMonth}
				</when>
				<otherwise>
					date_format(now(),'%Y-%m') 
				</otherwise>
			</choose>
			and t1.user_id = t.t_id
			and t1.visit_date is not null
		) zx ,
		(
			select count(t1.pay) 
			from user_cv_rel t1
			where date_format(t1.visit_date,'%Y-%m') = 
			<choose>
				<when test="dateMonth != null and dateMonth != ''">
					#{dateMonth}
				</when>
				<otherwise>
					date_format(now(),'%Y-%m') 
				</otherwise>
			</choose>
			and t1.user_id = t.t_id
			and t1.pay is not NULL
		) pay,
		(
			select count(t1.pre_pay_date) 
			from user_cv_rel t1
			where date_format(t1.visit_date,'%Y-%m') = 
			<choose>
				<when test="dateMonth != null and dateMonth != ''">
					#{dateMonth}
				</when>
				<otherwise>
					date_format(now(),'%Y-%m') 
				</otherwise>
			</choose> 
			and t1.user_id = t.t_id
			and t1.pre_pay_date is not NULL
		) prePay
		from user_info t
		where t.role = 3
  </select>
  
  <select id="searchYear" parameterType="String" resultType="map">
		
	select 	<!--一月-->
	'1月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'01')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'01')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'01')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'01') and t1.pay is not null) ff
	union ALL
	select <!--二月-->
	'2月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'02')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'02')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'02')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'02') and t1.pay is not null) ff
	union ALL
	select <!--三月-->
	'3月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'03')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'03')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'03')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'03') and t1.pay is not null) ff
	union ALL
	select <!--四月-->
	'4月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'04')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'04')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'04')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'04') and t1.pay is not null) ff
	union ALL
	select <!--五月-->
	'5月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'05')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'05')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'05')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'05') and t1.pay is not null) ff
	union ALL
	select <!--六月-->
	'6月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'06')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'06')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'06')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'06') and t1.pay is not null) ff
	union ALL
	select <!--七月-->
	'7月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'07')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'07')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'07')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'07') and t1.pay is not null) ff
	union ALL
	select <!--八月-->
	'8月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'08')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'08')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'08')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'08') and t1.pay is not null) ff
	union ALL
	select <!--九月-->
	'9月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'09')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'09')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'09')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'09') and t1.pay is not null) ff
	union ALL
	select <!--十月-->
	'10月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'10')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'10')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'10')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'10') and t1.pay is not null) ff
	union ALL
	select <!--十一月-->
	'11月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'11')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'11')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'11')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'11') and t1.pay is not null) ff
	union ALL
	select <!--十二月-->
	'12月' mon,
	(select count(*) from cv_info t1 where date_format(t1.create_date,'%Y%m') = CONCAT(#{year},'12')) lr,
	(select count(*) from user_cv_rel t1 where date_format(t1.visit_date,'%Y%m') = CONCAT(#{year},'12')) sm,
	(select count(*) from user_cv_rel t1 where date_format(t1.pre_pay_date,'%Y%m') = CONCAT(#{year},'12')) yb,
	(select count(*) from user_cv_rel t1 where date_format(t1.pay_date,'%Y%m') = CONCAT(#{year},'12') and t1.pay is not null) ff
  </select>
  <select id="validateLoginName" parameterType="map" resultMap="BaseResultMap">
			select * from user_info 
			<where>
			    <if test="loginName !=null and loginName !=''">
			      login_name = #{loginName}
			    </if>
		   </where>
	</select>
</mapper>  