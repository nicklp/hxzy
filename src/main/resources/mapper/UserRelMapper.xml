<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 这个xml的里面所有的操作，都是要对这个 Mapper 接口进行定义 -->
<mapper namespace="com.wisezone.mapper.UserRelMapper">
 
	<insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="tId">
		insert into user_cv_rel 
		(
			user_id,
			stu_id
			<if test="visitDate != null">
			,visit_date
			</if>
			<if test="prePayDate != null">
			,pre_pay_date
			</if>
			<if test="payDate != null">
			,pay_date
			</if>
			<if test="payType != null">
			,pay_type
			</if>
			<if test="pay != null">
			,pay
			</if>
		) values (
			#{userId},
			#{stuId}
			<if test="visitDate != null">
			,#{visitDate}
			</if>
			<if test="prePayDate != null">
			,#{prePayDate}
			</if>
			<if test="payDate != null">
			,#{payDate}
			</if>
			<if test="payType != null">
			,#{payType}
			</if>
			<if test="pay != null">
			,#{pay}
			</if>
		)
	</insert>
  
  	<update id="update" parameterType="map">
  		update user_cv_rel set 
  		user_id = #{userId},
  		stu_id = #{stuId}
  		<if test="visitDate != null">
		,visit_date = #{visitDate}
		</if>
		<if test="prePayDate != null">
		,pre_pay_date = #{prePayDate}
		</if>
		<if test="payDate != null">
		,pay_date = #{payDate}
		</if>
		<if test="payType != null">
		,pay_type = #{payType}
		</if>
		<if test="pay != null">
		,pay = #{pay}
		</if>
		where t_id = #{relId}
  	</update>
  	
  	<update id="updateCreateDate" parameterType="map">
  		update cv_info set create_date = #{createDate} where t_id = #{stuId}
  	</update>
  	<select id="getStatistics" resultType="map">
  		select 
		(select count(*) from user_cv_rel t where t.visit_date is not null) visitCount,
		(select count(*) from user_cv_rel t where t.pay_date is not null) payCount,
		(select count(*) from user_cv_rel t where t.pay_type = 3) leaveCount,
		(select count(*) from user_cv_rel t where t.pay_type = 4) payOneTime,
		(select count(*) from user_cv_rel t where t.pay_type = 5) instalmentCount,
		(select count(*) from user_cv_rel t where t.pay_type = 6) yxCount,
		(select count(*) from user_cv_rel t where t.pay_type = 7) creditCount
		  		
  	</select>
</mapper>  